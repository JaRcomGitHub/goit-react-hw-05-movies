{"version":3,"file":"static/js/884.16031802.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { ThreeDots } from  'react-loader-spinner'\n\nexport function Loader() {\n    return (\n        <div className=\"Loader\">\n            <ThreeDots \n                height=\"80\" \n                width=\"80\" \n                radius=\"9\"\n                color=\"orangered\" \n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClassName=\"\"\n                visible={true}\n            />\n        </div>\n    )\n};\n","import { useState, useEffect, Suspense } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { getTmdbMovieId, baseImageTmdbURL_m } from \"services/api\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { GenresList, MovieCard, LinkGoBack } from \"components/App.styled\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [loading, setLoading] = useState(false);\n    const [movieDetails, setMovieDetails] = useState();\n    const [backLinkHref] = useState(useLocation().state?.from ?? \"/\");\n    \n    useEffect(() => {\n        setLoading(true);\n\n        getTmdbMovieId(movieId)\n            .then(data => {\n                const movies = data.data;\n                //console.log('Movie', movies);\n                setMovieDetails(movies);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [movieId]);\n\n    return (\n        <div>\n            <LinkGoBack to={backLinkHref}>‚Üê Go back</LinkGoBack>\n            {loading && <Loader />}\n            {loading === false && !movieDetails && <p>sorry, this movie ID not found</p>}\n            {movieDetails &&\n            <>\n                <MovieCard>\n                    <img\n                        src={baseImageTmdbURL_m + movieDetails.poster_path}\n                        alt={\"poster \" + movieDetails.title}\n                        loading=\"lazy\"\n                        width=\"300\"\n                    />\n                    <div>\n                        <h2>{movieDetails.title} ({movieDetails.release_date.substr(0, 4)})</h2>\n                        <p>User score: {Math.round(movieDetails.vote_average*10)}%</p>\n                        <h3>Overview</h3>\n                        <p>{movieDetails.overview}</p>\n                        <h4>Genres</h4>\n                        <GenresList>\n                            {(movieDetails.genres).map(({ id, name }) => (\n                                <li key={id}>\n                                    {name}\n                                </li>\n                            ))}\n                        </GenresList>\n                    </div>\n                </MovieCard>\n                \n                <div>\n                    <hr/>\n                    <p>Additional information</p>\n                    <ul>\n                        <li><Link to=\"cast\">Cast</Link></li>\n                        <li><Link to=\"reviews\">Reviews</Link></li>\n                    </ul>\n                    <hr/>\n                </div>\n\n                <Suspense fallback={<div>Loading page...</div>}>\n                    <Outlet />\n                </Suspense>\n            </>\n            }\n        </div>\n    );\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst API_KEY = \"952628f2e449efc757df6f6ed1cc0d2c\";// API (v3 auth) <<api_key>>\nconst API_LANGUAGE = 'en'\n\nconst baseThemoviedbURL = \"https://api.themoviedb.org/3/trending/movie/day\";\nconst baseTmdbMovieURL = \"https://api.themoviedb.org/3/movie/\";\nconst baseTmdbMovieSearchURL = \"https://api.themoviedb.org/3/search/\";\n\nexport const baseImageTmdbURL_l = \"https://image.tmdb.org/t/p/w200\";\nexport const baseImageTmdbURL_m = \"https://image.tmdb.org/t/p/w300\";\nexport const baseImageTmdbURL_h = \"https://image.tmdb.org/t/p/w500\";\n//\"https://image.tmdb.org/t/p/original\"\n\nconst searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: API_LANGUAGE,\n});\n\nexport async function getTmdbTrendingMovies() {\n    const url = `${baseThemoviedbURL}?${searchParams}`;\n    try {\n        const response = await axios.get(url);\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getTmdbMovieId(movieId) {\n    const url = `${baseTmdbMovieURL}${movieId}?${searchParams}`;\n    try {\n        const response = await axios.get(url);\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getTmdbMovieIdCredits(movieId) {\n    const url = `${baseTmdbMovieURL}${movieId}/credits?${searchParams}`;\n    try {\n        const response = await axios.get(url);\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getTmdbMovieIdReviews(movieId) {\n    const url = `${baseTmdbMovieURL}${movieId}/reviews?${searchParams}`;\n    try {\n        const response = await axios.get(url);\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getTmdbMovieSearch(searchValue) {\n    const url = `${baseTmdbMovieSearchURL}/movie?${searchParams}&query=${searchValue}`;\n    try {\n        const response = await axios.get(url);\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n"],"names":["Loader","className","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","movieId","useParams","useState","loading","setLoading","movieDetails","setMovieDetails","useLocation","state","from","backLinkHref","useEffect","getTmdbMovieId","then","data","movies","catch","error","console","log","finally","to","src","baseImageTmdbURL_m","poster_path","alt","title","release_date","substr","Math","round","vote_average","overview","genres","map","id","name","Suspense","fallback","baseThemoviedbURL","baseTmdbMovieURL","baseTmdbMovieSearchURL","baseImageTmdbURL_l","searchParams","URLSearchParams","api_key","language","getTmdbTrendingMovies","url","axios","response","getTmdbMovieIdCredits","getTmdbMovieIdReviews","getTmdbMovieSearch","searchValue"],"sourceRoot":""}